version: '3.8'

services:
  # Baza danych
  db:
    image: mysql:5.7
    container_name: auth-db
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./sql-scripts/01-auth-db.sql:/docker-entrypoint-initdb.d/01-auth-db.sql
      - ./sql-scripts/02-app-data-db.sql:/docker-entrypoint-initdb.d/02-app-data-db.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Backend - Spring Boot
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: app-backend
    environment:
      # Auth DB config
      SPRING_DATASOURCE_AUTH_URL: jdbc:mysql://db:3306/authjwt
      SPRING_DATASOURCE_AUTH_USERNAME: root
      SPRING_DATASOURCE_AUTH_PASSWORD: password
      SPRING_DATASOURCE_AUTH_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_DATASOURCE_AUTH_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect
      SPRING_DATASOURCE_AUTH_HIBERNATE_HBM2DDL_AUTO: update  # Zmieniono z validate na update
      
      # App Data DB config
      SPRING_DATASOURCE_APP_DATA_URL: jdbc:mysql://db:3306/app_data
      SPRING_DATASOURCE_APP_DATA_USERNAME: root
      SPRING_DATASOURCE_APP_DATA_PASSWORD: password
      SPRING_DATASOURCE_APP_DATA_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_DATASOURCE_APP_DATA_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect
      SPRING_DATASOURCE_APP_DATA_HIBERNATE_HBM2DDL_AUTO: update  # Zmieniono z validate na update
      
      # Pozosta≈Çe ustawienia
      SPRING_WEBMVC_CORS_ALLOWED_ORIGINS: http://localhost,http://frontend,http://app-frontend
      SPRING_WEBMVC_CORS_ALLOWED_METHODS: GET,POST,PUT,DELETE,OPTIONS
      SPRING_WEBMVC_CORS_ALLOWED_HEADERS: "*"
      SPRING_WEBMVC_CORS_ALLOW_CREDENTIALS: "true"
      
      LOGGING_LEVEL_ORG_HIBERNATE_SQL: trace
      LOGGING_LEVEL_ORG_HIBERNATE_ORM_JDBC_BIND: trace
      
      SPRING_MAIN_BANNER_MODE: "off"
      SECURITY_JWT_TOKEN_SECRET_KEY: your_jwt_secret_key_here
      SPRING_MAIN_ALLOW_CIRCULAR_REFERENCES: "true"
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  # Frontend - React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: app-frontend
    ports:
      - "80:80"
    #volumes:
     # - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
